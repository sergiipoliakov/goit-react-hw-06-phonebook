{"version":3,"sources":["components/Layout/Layout.module.css","components/Title/Title.module.css","components/Button/Button.module.css","redux/phoneBook/phoneBook-types.js","redux/phoneBook/phoneBook-reducer.js","redux/store.js","components/Title/Title.js","components/Layout/Layout.js","redux/phoneBook/phonebook-actions.js","components/DublicateAlert/DublicateAlert.js","components/Button/Button.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactListItem/ContactListItem.module.css"],"names":["module","exports","combineReducers","items","state","actions","type","types","payload","filter","contact","id","rootReducer","phoneBook","phoneBookReducer","store","createStore","composeWithDevTools","Title","label","className","styles","title","Layout","children","layout","CSSTransition","in","appear","timeout","classNames","unmountOnExit","name","number","uuid_v4","dublicateName","contactId","value","DublicateAlert","Button","onClick","button","ContactForm","handleChange","e","target","setState","handleSubmit","preventDefault","props","contacts","elements","length","setTimeout","onSubmit","this","Boolean","onChange","Component","defaultProps","connect","dispatch","phoneBookActions","onChangeFilter","event","ContactListItem","onRemove","item","filteredContacts","toLowerCase","includes","searchName","onRemoveContact","TransitionGroup","component","map","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a273a0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__3PvPc\",\"appear\":\"Layout_appear__28yHE\",\"appearActive\":\"Layout_appearActive__28_al\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__1jlrO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QF_k\"};","const ADD = 'phoneBook/addContact';\nconst DELETE = 'phoneBook/deleteContact';\nconst CHANGE_FILTER = 'phoneBook/changeFilter';\n\nexport default { ADD, DELETE, CHANGE_FILTER };\n","import { combineReducers } from 'redux';\nimport types from './phoneBook-types';\n\nconst items = (state = [], actions) => {\n  switch (actions.type) {\n    case types.ADD:\n      return [...state, actions.payload];\n\n    case types.DELETE:\n      return state.filter(contact => contact.id !== actions.payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = '', actions) => {\n  switch (actions.type) {\n    case types.CHANGE_FILTER:\n      return actions.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport phoneBookReducer from './phoneBook/phoneBook-reducer';\n\nconst rootReducer = combineReducers({\n  phoneBook: phoneBookReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import PropTypes from 'prop-types';\n\nimport styles from './Title.module.css';\n\nconst Title = ({ label }) => <h1 className={styles.title}>{label}</h1>;\n\nTitle.propTypes = {\n  label: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import PropTypes from 'prop-types';\nimport Title from '../Title/Title';\nimport { CSSTransition } from 'react-transition-group';\n\nimport styles from './Layout.module.css';\n\nconst Layout = ({ children }) => (\n  <div className={styles.layout}>\n    <CSSTransition\n      in={true}\n      appear={true}\n      timeout={500}\n      classNames={styles}\n      unmountOnExit\n    >\n      <Title label=\"Phonebook\" />\n    </CSSTransition>\n    {children}\n  </div>\n);\n\nexport default Layout;\n\nLayout.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n","import { v4 as uuid_v4 } from 'uuid';\nimport types from './phoneBook-types';\n\nconst addContact = (name, number) => ({\n  type: types.ADD,\n  payload: {\n    id: uuid_v4(),\n    name,\n    number,\n    dublicateName: false,\n  },\n});\n\nconst deleteContact = contactId => ({\n  type: types.DELETE,\n  payload: contactId,\n});\n\nconst changeFilter = value => ({\n  type: types.CHANGE_FILTER,\n  payload: value,\n});\n\nexport default { addContact, deleteContact, changeFilter };\n","import PropTypes from 'prop-types';\nimport './DublicateAlert.css';\n\nexport default function DublicateAlert({ name = 'no name' }) {\n  return (\n    <div className=\"dublucate-name\">\n      <p>\"{name}\" is already in contacts</p>\n    </div>\n  );\n}\n\nDublicateAlert.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport styles from './Button.module.css';\n\nconst Button = ({ label, type = 'button', onClick = () => null }) => (\n  <button className={styles.button} type={type} onClick={onClick}>\n    {label}\n  </button>\n);\n\nButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport phoneBookActions from '../../redux/phoneBook/phonebook-actions';\n\nimport DublicateAlert from '../DublicateAlert/DublicateAlert';\nimport Button from '../Button/Button';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './ContactForm.css';\n\nclass ContactForm extends Component {\n  static defaultProps = {};\n\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ),\n  };\n\n  state = {\n    name: '',\n    number: '',\n    dublicateName: false,\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const duplicate = this.props.contacts.filter(\n      contact => contact.name === e.target.elements[0].value,\n    );\n\n    if (duplicate.length > 0) {\n      this.setState({ dublicateName: !this.state.dublicateName });\n\n      return setTimeout(() => {\n        this.setState({\n          dublicateName: false,\n        });\n      }, 2500);\n    }\n    const { name, number } = this.state;\n    const onSubmit = this.props.onSubmit;\n    onSubmit(name, number);\n\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number, dublicateName } = this.state;\n\n    return (\n      <>\n        <CSSTransition\n          in={dublicateName && Boolean(name)}\n          classNames=\"dublucate-name-slideIn\"\n          timeout={250}\n          unmountOnExit\n        >\n          <DublicateAlert name={name} />\n        </CSSTransition>\n\n        <form onSubmit={this.handleSubmit} className=\"form\">\n          <label className=\"form-label\">\n            Name\n            <input\n              className=\"form-input\"\n              type=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              name=\"name\"\n            />\n          </label>\n\n          <label className=\"form-label\">\n            Number\n            <input\n              className=\"form-input\"\n              type=\"tel\"\n              value={number}\n              onChange={this.handleChange}\n              name=\"number\"\n            />\n          </label>\n\n          <Button label=\"Add contact\" type=\"submit\" />\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.phoneBook.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(phoneBookActions.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport phoneBookActions from '../../redux/phoneBook/phonebook-actions.js';\nimport './Filter.css';\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <div className=\"form\">\n      <label className=\"form-label\">\n        Find contact by name\n        <input\n          type=\"text\"\n          className=\"form-input\"\n          value={value}\n          onChange={onChangeFilter}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n\n  onChangeFilter: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  value: state.phoneBook.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: event =>\n    dispatch(phoneBookActions.changeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport Button from '../Button/Button';\nimport styles from './ContactListItem.module.css';\n\nconst ContactListItem = ({ id, name, number, onRemove }) => (\n  <li key={id} className={styles.item}>\n    <p className={styles.name}>{name}: </p>\n    <div className={styles.actions}>\n      <p className={styles.number}>{number}</p>\n      <Button\n        label=\"Delete\"\n        type=\"button\"\n        className=\"ContactList-button\"\n        onClick={onRemove}\n      />\n    </div>\n  </li>\n);\n\nexport default ContactListItem;\n\nContactListItem.defaultProps = {\n  name: 'noName',\n  number: '123 45 67',\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onRemove: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport phoneBookActions from '../../redux/phoneBook/phonebook-actions';\nimport Filter from '../Filter/Filter';\nimport Title from '../Title/Title';\nimport './ContactList.css';\n\nimport ContactListItem from '../ContactListItem/ContactListItem';\n\nconst ContactList = ({\n  filteredContacts,\n  contacts,\n  searchName,\n  onRemoveContact,\n}) => (\n  <>\n    <CSSTransition\n      in={contacts.length > 1}\n      timeout={500}\n      classNames=\"filter-slideIn\"\n      unmountOnExit\n    >\n      <Filter />\n    </CSSTransition>\n\n    <CSSTransition\n      in={filteredContacts.length > 0}\n      timeout={500}\n      classNames=\"ContactList-title-slideIn\"\n      unmountOnExit\n    >\n      <Title label=\"Contacts\" />\n    </CSSTransition>\n\n    <CSSTransition\n      in={filteredContacts.length === 0 && contacts.length > 1}\n      timeout={500}\n      classNames=\"ContactList-title-slideIn\"\n      unmountOnExit\n    >\n      <Title label={`Contact name: \"${searchName}\"  not found`} />\n    </CSSTransition>\n\n    <TransitionGroup component=\"ul\" className=\"ContactList\">\n      {filteredContacts.map(({ id, name, number }) => (\n        <CSSTransition\n          key={id}\n          timeout={250}\n          classNames=\"ContactList-item-fade\"\n        >\n          <ContactListItem\n            id={id}\n            name={name}\n            number={number}\n            onRemove={() => onRemoveContact(id)}\n          />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  </>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      number: PropTypes.string,\n      name: PropTypes.string,\n    }),\n  ),\n  onRemoveContact: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n  const { items, filter } = state.phoneBook;\n  const filteredContacts = items.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\n  return {\n    searchName: filter,\n    contacts: state.phoneBook.items,\n\n    filteredContacts: filteredContacts,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onRemoveContact: contactId =>\n    dispatch(phoneBookActions.deleteContact(contactId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import Layout from './components/Layout';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\n\nexport default function App() {\n  // state = {\n  //   contacts: [\n  //     // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  //     // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  //     // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  //     // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  //   ],\n  //   filter: '',\n  //   name: '',\n  //   number: '',\n  // };\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (this.state.contacts !== prevState.contacts) {\n  //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  //   }\n  // }\n\n  // componentDidMount() {\n  //   const contacts = localStorage.getItem('contacts');\n\n  //   const parsContacts = JSON.parse(contacts);\n\n  //   if (parsContacts) {\n  //     this.setState({ contacts: parsContacts });\n  //   }\n  // }\n\n  // handleChange = e => {\n  //   const { name, value } = e.target;\n\n  //   this.setState({\n  //     [name]: value,\n  //   });\n  // };\n\n  // addContact = data => {\n  //   const contact = {\n  //     id: uuid_v4(),\n  //     name: data.name,\n  //     number: data.number,\n  //   };\n\n  //   this.setState(prevState => {\n  //     return {\n  //       contacts: [...prevState.contacts, contact],\n  //     };\n  //   });\n  // };\n  // removeContact = contactId => {\n  //   this.setState(prevState => {\n  //     return {\n  //       contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n  //     };\n  //   });\n  // };\n\n  // changeFilter = filter => {\n  //   this.setState({ filter });\n  // };\n\n  // getFilteredName = () => {\n  //   const { contacts, filter } = this.state;\n\n  //   return contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(filter.toLowerCase()),\n  //   );\n  // };\n\n  return (\n    <Layout>\n      <ContactForm />\n\n      <ContactList />\n    </Layout>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__2THQn\",\"actions\":\"ContactListItem_actions__2eHF6\",\"name\":\"ContactListItem_name__32Yb3\",\"number\":\"ContactListItem_number__3CKnU\"};"],"sourceRoot":""}