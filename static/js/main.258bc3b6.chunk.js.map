{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/Layout/Layout.module.css","components/Title/Title.module.css","components/Button/Button.module.css","redux/phoneBook/phonebook-actions.js","redux/phoneBook/phoneBook-reducer.js","redux/store.js","components/Title/Title.js","components/Layout/Layout.js","components/DublicateAlert/DublicateAlert.js","components/Button/Button.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuid_v4","deleteContact","changeFilter","items","createReducer","actions","state","action","filter","contact","_","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","phoneBook","phoneBookReducer","devTools","process","Title","label","className","styles","title","Layout","children","layout","CSSTransition","in","appear","timeout","classNames","unmountOnExit","DublicateAlert","Button","type","onClick","button","ContactForm","dublicateName","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","contacts","elements","length","setTimeout","onSubmit","alert","this","Boolean","onChange","Component","defaultProps","connect","dispatch","phoneBookActions","onChangeFilter","event","ContactListItem","onRemove","item","filteredContacts","toLowerCase","includes","searchName","onRemoveContact","contactId","TransitionGroup","component","map","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.258bc3b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__2THQn\",\"actions\":\"ContactListItem_actions__2eHF6\",\"name\":\"ContactListItem_name__32Yb3\",\"number\":\"ContactListItem_number__3CKnU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__3PvPc\",\"appear\":\"Layout_appear__28yHE\",\"appearActive\":\"Layout_appearActive__28_al\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__1jlrO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QF_k\"};","import { v4 as uuid_v4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\nimport types from './phoneBook-types';\n\nconst addContact = createAction('phoneBook/addContact', (name, number) => {\n  return {\n    payload: {\n      id: uuid_v4(),\n      name,\n      number,\n    },\n  };\n});\n// const addContact = (name, number) => ({\n//   type: types.ADD,\n//   payload: {\n//     id: uuid_v4(),\n//     name,\n//     number,\n//     dublicateName: false,\n//   },\n// });\n\nconst deleteContact = createAction('phoneBook/deleteContact');\n\n// const deleteContact = contactId => ({\n//   type: types.DELETE,\n//   payload: contactId,\n// });\n\nconst changeFilter = createAction('phoneBook/changeFilter');\n// const changeFilter = value => ({\n//   type: types.CHANGE_FILTER,\n//   payload: value,\n// });\n\nexport default { addContact, deleteContact, changeFilter };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './phonebook-actions';\n// import types from './phoneBook-types';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, action) => [...state, action.payload],\n  [actions.deleteContact]: (state, action) =>\n    state.filter(contact => contact.id !== action.payload),\n});\n\n// const items = (state = [], actions) => {\n//   switch (actions.type) {\n//     case types.ADD:\n//       return [...state, actions.payload];\n\n//     case types.DELETE:\n//       return state.filter(contact => contact.id !== actions.payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, action) => action.payload,\n});\n// const filter = (state = '', actions) => {\n//   switch (actions.type) {\n//     case 'phoneBook/changeFilter':\n//       return actions.payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","// import { combineReducers } from 'redux';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n// import { composeWithDevTools } from 'redux-devtools-extension';\nimport phoneBookReducer from './phoneBook/phoneBook-reducer';\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\n// const rootReducer = combineReducers({\n//   phoneBook: phoneBookReducer,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\nconst store = configureStore({\n  reducer: {\n    phoneBook: phoneBookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import PropTypes from 'prop-types';\n\nimport styles from './Title.module.css';\n\nconst Title = ({ label }) => <h1 className={styles.title}>{label}</h1>;\n\nTitle.propTypes = {\n  label: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import PropTypes from 'prop-types';\nimport Title from '../Title/Title';\nimport { CSSTransition } from 'react-transition-group';\n\nimport styles from './Layout.module.css';\n\nconst Layout = ({ children }) => (\n  <div className={styles.layout}>\n    <CSSTransition\n      in={true}\n      appear={true}\n      timeout={500}\n      classNames={styles}\n      unmountOnExit\n    >\n      <Title label=\"Phonebook\" />\n    </CSSTransition>\n    {children}\n  </div>\n);\n\nexport default Layout;\n\nLayout.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport './DublicateAlert.css';\n\nexport default function DublicateAlert({ name = 'no name' }) {\n  return (\n    <div className=\"dublucate-name\">\n      <p>\"{name}\" is already in contacts</p>\n    </div>\n  );\n}\n\nDublicateAlert.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport styles from './Button.module.css';\n\nconst Button = ({ label, type = 'button', onClick = () => null }) => (\n  <button className={styles.button} type={type} onClick={onClick}>\n    {label}\n  </button>\n);\n\nButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport phoneBookActions from '../../redux/phoneBook/phonebook-actions';\n\nimport DublicateAlert from '../DublicateAlert/DublicateAlert';\nimport Button from '../Button/Button';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './ContactForm.css';\n\nclass ContactForm extends Component {\n  static defaultProps = {};\n\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ),\n  };\n\n  state = {\n    name: '',\n    number: '',\n    dublicateName: false,\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n\n    if (name !== '' && number !== '') {\n      const duplicate = this.props.contacts.filter(\n        contact => contact.name === e.target.elements[0].value,\n      );\n\n      if (duplicate.length > 0) {\n        this.setState({ dublicateName: !this.state.dublicateName });\n\n        return setTimeout(() => {\n          this.setState({\n            dublicateName: false,\n          });\n        }, 2500);\n      }\n\n      const onSubmit = this.props.onSubmit;\n      onSubmit(name, number);\n      this.setState({ name: '', number: '' });\n      return;\n    }\n    if (name === '') {\n      alert('write NAME!');\n    } else if (number === '') {\n      alert('write NUMBER!!');\n    }\n  };\n\n  render() {\n    const { name, number, dublicateName } = this.state;\n\n    return (\n      <>\n        <CSSTransition\n          in={dublicateName && Boolean(name)}\n          classNames=\"dublucate-name-slideIn\"\n          timeout={250}\n          unmountOnExit\n        >\n          <DublicateAlert name={name} />\n        </CSSTransition>\n\n        <form onSubmit={this.handleSubmit} className=\"form\">\n          <label className=\"form-label\">\n            Name\n            <input\n              className=\"form-input\"\n              type=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              name=\"name\"\n            />\n          </label>\n\n          <label className=\"form-label\">\n            Number\n            <input\n              className=\"form-input\"\n              type=\"tel\"\n              value={number}\n              onChange={this.handleChange}\n              name=\"number\"\n            />\n          </label>\n\n          <Button label=\"Add contact\" type=\"submit\" />\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.phoneBook.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(phoneBookActions.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport phoneBookActions from '../../redux/phoneBook/phonebook-actions.js';\nimport './Filter.css';\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <div className=\"form\">\n      <label className=\"form-label\">\n        Find contact by name\n        <input\n          type=\"text\"\n          className=\"form-input\"\n          value={value}\n          onChange={onChangeFilter}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n\n  onChangeFilter: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  value: state.phoneBook.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: event =>\n    dispatch(phoneBookActions.changeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport Button from '../Button/Button';\nimport styles from './ContactListItem.module.css';\n\nconst ContactListItem = ({ id, name, number, onRemove }) => (\n  <li key={id} className={styles.item}>\n    <p className={styles.name}>{name}: </p>\n    <div className={styles.actions}>\n      <p className={styles.number}>{number}</p>\n      <Button\n        label=\"Delete\"\n        type=\"button\"\n        className=\"ContactList-button\"\n        onClick={onRemove}\n      />\n    </div>\n  </li>\n);\n\nexport default ContactListItem;\n\nContactListItem.defaultProps = {\n  name: 'noName',\n  number: '123 45 67',\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onRemove: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport phoneBookActions from '../../redux/phoneBook/phonebook-actions';\nimport Filter from '../Filter/Filter';\nimport Title from '../Title/Title';\nimport './ContactList.css';\n\nimport ContactListItem from '../ContactListItem/ContactListItem';\n\nconst ContactList = ({\n  filteredContacts,\n  contacts,\n  searchName,\n  onRemoveContact,\n}) => (\n  <>\n    <CSSTransition\n      in={contacts.length > 1}\n      timeout={500}\n      classNames=\"filter-slideIn\"\n      unmountOnExit\n    >\n      <Filter />\n    </CSSTransition>\n\n    <CSSTransition\n      in={filteredContacts.length > 0}\n      timeout={500}\n      classNames=\"ContactList-title-slideIn\"\n      unmountOnExit\n    >\n      <Title label=\"Contacts\" />\n    </CSSTransition>\n\n    <CSSTransition\n      in={filteredContacts.length === 0 && contacts.length > 1}\n      timeout={500}\n      classNames=\"ContactList-title-slideIn\"\n      unmountOnExit\n    >\n      <Title label={`Contact name: \"${searchName}\"  not found`} />\n    </CSSTransition>\n\n    <TransitionGroup component=\"ul\" className=\"ContactList\">\n      {filteredContacts.map(({ id, name, number }) => (\n        <CSSTransition\n          key={id}\n          timeout={250}\n          classNames=\"ContactList-item-fade\"\n        >\n          <ContactListItem\n            id={id}\n            name={name}\n            number={number}\n            onRemove={() => onRemoveContact(id)}\n          />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  </>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      number: PropTypes.string,\n      name: PropTypes.string,\n    }),\n  ),\n  onRemoveContact: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n  const { items, filter } = state.phoneBook;\n  const filteredContacts = items.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\n  return {\n    searchName: filter,\n    contacts: state.phoneBook.items,\n    filteredContacts: filteredContacts,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onRemoveContact: contactId =>\n    dispatch(phoneBookActions.deleteContact(contactId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import Layout from './components/Layout';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\n\nexport default function App() {\n  return (\n    <Layout>\n      <ContactForm />\n\n      <ContactList />\n    </Layout>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}